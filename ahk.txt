; IMPORTANT INFO ABOUT GETTING STARTED: Lines that start with a
; semicolon, such as this one, are comments.  They are not executed.

; This script has a special filename and path because it is automatically
; launched when you run the program directly.  Also, any text file whose
; name ends in .ahk is associated with the program, which means that it
; can be launched simply by double-clicking it.  You can have as many .ahk
; files as you want, located in any folder.  You can also run more than
; one .ahk file simultaneously and each will get its own tray icon.

; SAMPLE HOTKEYS: Below are two sample hotkeys.  The first is Win+Z and it
; launches a web site in the default browser.  The second is Control+Alt+N
; and it launches a new Notepad window (or activates an existing one).  To
; try out these hotkeys, run AutoHotkey again, which will load this file.

SetTitleMatchMode, 2

g_LastCtrlKeyDownTime := 0
g_AbortSendEsc := false
g_ControlRepeatDetected := false

*CapsLock::
    if (g_ControlRepeatDetected)
    {
        return
    }

    send,{Ctrl down}{Shift Down}{Alt Down}
    g_LastCtrlKeyDownTime := A_TickCount
    g_AbortSendEsc := false
    g_ControlRepeatDetected := true

    return
    
*CapsLock Up::
    send,{Ctrl up}{Shift Up}{Alt Up}
    g_ControlRepeatDetected := false
    if (g_AbortSendEsc)
    {
        return
    }
    current_time := A_TickCount
    time_elapsed := current_time - g_LastCtrlKeyDownTime
    if (time_elapsed <= 200)
    {
        SendInput {Esc}
    }
    return

~*^a::
    g_AbortSendEsc := true
    return
~*^b::
    g_AbortSendEsc := true
    return
~*^c::
    g_AbortSendEsc := true
    return
~*^d::
    g_AbortSendEsc := true
    return
~*^e::
    g_AbortSendEsc := true
    return
~*^f::
    g_AbortSendEsc := true
    return
~*^!+g::
    g_AbortSendEsc := true
    Run www.gmail.com
    return
~*^h::
    g_AbortSendEsc := true
    return
~*^!+i::
    g_AbortSendEsc := true
    ;if WinExist("ahk_class mintty")
    if WinExist("ahk_class VirtualConsoleClass")
        WinActivate
        else
        Run C:\Users\Aaron\.babun\babun
    return
~*^j::
    g_AbortSendEsc := true
    return
*^!+k::
    g_AbortSendEsc := true
if WinExist("- Google Chrome")
        WinActivate
else
    Run C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
    return
~*^!+l::
    g_AbortSendEsc := true
if WinExist("ahk_class CabinetWClass")
        WinActivate
else
    Run explorer
return

    return
*^!+m::
    g_AbortSendEsc := true
if WinExist("ahk_class OpusApp")
        WinActivate
    return
*^!+n::
    g_AbortSendEsc := true
    if WinExist("ahk_class Vim")
            WinActivate
    else
        Run C:\Program Files\Vim\vim74\gvim.exe
    return
~*^!+o::
    g_AbortSendEsc := true
if WinExist("ahk_class MozillaWindowClass")
        WinActivate
else
    Run C:\Program Files (x86)\Mozilla Firefox\firefox.exe
return
    return
~*^p::
    g_AbortSendEsc := true
    return
~*^q::
    g_AbortSendEsc := true
    return
~*^r::
    g_AbortSendEsc := true
    return
~*^s::
    g_AbortSendEsc := true
    return
~*^t::
    g_AbortSendEsc := true
    return
~*^u::
    g_AbortSendEsc := true
    return
~*^v::
    g_AbortSendEsc := true
    return
~*^w::
    g_AbortSendEsc := true
    return
~*^x::
    g_AbortSendEsc := true
    return
~*^y::
    g_AbortSendEsc := true
    return
~*^z::
    g_AbortSendEsc := true
    return


; From http://www.firexis.com/tools/autohotkey.html slightly modified
; --------------- CODE BEGIN ---------------
; ----- Modify the value 1920 by half your screen width
; ----- Modify the value 1080 by the height of your screen
; winMove(a,b,c,d) a=px from left, b=px from top, c=win width, d=win height

^!h:: ; ctrl+alt+h to Snap current window to the left half of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 0, 0, 960, 1080
return

^!l:: ; ctrl+alt+l to Snap current window to the right half of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 960, 0, 960, 1080
return

^!m:: ; ctrl+alt+m to Maximize current window
    WinGet, active_id, ID, A
    WinMove, A, , 0, 0, 1920, 1080
return

^!j:: ; ctrl+alt+j to Snap current window to the bottom left quarter of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 0, 540, 960, 540
return

^!u:: ; ctrl+alt+u to Snap current window to the bottom left quarter of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 0, 0, 960, 540
return

^!k:: ; ctrl+alt+k to Snap current window to the bottom right quarter of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 960, 540, 960, 540
return

^!i:: ; ctrl+alt+i to Snap current window to the top right quarter of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 960, 0, 960, 540
return

^!o:: ; ctrl+alt+o to Snap current window to the top half of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 0, 0, 1920, 540
return

^!.:: ; ctrl+alt+. to Snap current window to the bottom half of the screen
    WinGet, active_id, ID, A
    WinMove, A, , 0, 540, 1920, 540
return



^!n::
IfWinExist Untitled - Notepad
    WinActivate
else
    Run Notepad
return

; ^g::Run www.gmail.com
^#d::Run www.gmail.com

+!i::
IfWinExist Cmder
    WinActivate
else
    Run C:\cmder2\Cmder.exe
return


+!n::
if WinExist("ahk_class Vim")
        WinActivate
else
    Run Gvim
return




+!m::  
if WinExist("ahk_class OpusApp")
        WinActivate
return


+!f::
if WinExist("ahk_class MozillaWindowClass")
        WinActivate
else
    Run C:\Program Files (x86)\Mozilla Firefox\firefox.exe
return


+!k::
if WinExist("ahk_class Chrome_WidgetWin_1")
        WinActivate
else
    Run C:\Program Files (x86)\Google\Chrome\Application\chrome.exe
return

;switch between windows in the same app

!`:: ; Next window
WinGetClass, ActiveClass, A
WinGet, WinClassCount, Count, ahk_class %ActiveClass%
IF WinClassCount = 1
    Return
Else
WinGet, List, List, % "ahk_class " ActiveClass
Loop, % List
{
    index := List - A_Index + 1
    WinGet, State, MinMax, % "ahk_id " List%index%
    if (State <> -1)
    {
        WinID := List%index%
        break
    }
}
WinActivate, % "ahk_id " WinID
return

!^`:: ; Last window
WinGetClass, ActiveClass, A
WinGet, WinClassCount, Count, ahk_class %ActiveClass%
IF WinClassCount = 1
    Return
Else
WinGet, List, List, % "ahk_class " ActiveClass
Loop, % List
{
    index := List - A_Index + 1
    WinGet, State, MinMax, % "ahk_id " List%index%
    if (State <> -1)
    {
        WinID := List%index%
        break
    }
}
WinActivate, % "ahk_id " WinID
return


; Note: From now on whenever you run AutoHotkey directly, this script
; will be loaded.  So feel free to customize it to suit your needs.

; Please read the QUICK-START TUTORIAL near the top of the help file.
; It explains how to perform common automation tasks such as sending
; keystrokes and mouse clicks.  It also explains more about hotkeys.
